# Generated by Django 2.2.7 on 2019-12-02 07:13

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('chapters', models.IntegerField(default=0)),
                ('total_duration_min', models.IntegerField(default=0)),
                ('per_class_duration_min', models.IntegerField(default=0)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('doj', models.DateField(blank=True, null=True)),
                ('salary', models.FloatField(default=0)),
                ('web_lecture', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('subjects', models.ManyToManyField(to='school.Subject')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('doj', models.DateField(blank=True, null=True)),
                ('standard', models.IntegerField(blank=True, null=True)),
                ('roll_no', models.AutoField(primary_key=True, serialize=False)),
                ('ranking', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('subjects', models.ManyToManyField(to='school.Subject')),
                ('teachers', models.ManyToManyField(to='school.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='Relative',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=10, null=True)),
                ('relation', models.CharField(blank=True, max_length=64, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('students', models.ManyToManyField(to='school.Student')),
            ],
        ),
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=64, null=True, unique=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('web_lecture_support', models.BooleanField(default=False)),
                ('shape', models.CharField(blank=True, choices=[('oval', 'oval'), ('rectangular', 'rectangular'), ('canopy', 'canopy'), ('elevated', 'elevated')], default=None, max_length=64, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('subjects', models.ManyToManyField(to='school.Subject')),
                ('teachers', models.ManyToManyField(to='school.Teacher')),
            ],
        ),
    ]
